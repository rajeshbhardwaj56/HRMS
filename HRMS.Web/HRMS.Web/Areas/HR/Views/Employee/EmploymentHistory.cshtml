@using HRMS.Models.Employee
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model EmploymentHistory

@{
    Layout = $"~/Areas/{HttpContextAccessor.HttpContext.Session.GetString(HRMS.Models.Common.Constants.AreaName)}/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Employment History";
}
<style>
    .page-split-container {
        display: flex;
        flex-direction: column;
        height: calc(100vh - 100px); /* Adjust for header/footer if needed */
    }

    .form-section, .table-section {
        flex: 1; /* Each takes 50% height */
        overflow-y: auto;
        padding: 15px;
        border-bottom: 1px solid #ccc;
    }

    .table-section {
        background-color: #f9f9f9;
    }

    .main-header.anim {
        position: sticky;
        top: 0;
        background: white;
        z-index: 1;
        padding-top: 10px;
    }
</style>
<div class="main-header anim fs-6">Add / Edit Employment History</div>
<div class="page-split-container">
    <div class="form-section">
        <form id="employmentHistoryForm" method="post">
            <div class="Container">

                <div class="group-box anim" style="--delay: .3s">
                @Html.HiddenFor(m => m.EmployeeID)
                @Html.HiddenFor(m => m.EmploymentHistoryID)

                <div class="row mb-3">
                    <div class="col-md-4 form-group">
                        <label>Company Name<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Employment ID<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.EmploymentID, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>From Date<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.From, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>To Date<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.To, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Address<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>City<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>State<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.State, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="col-md-4 form-group">
                        <label>Country<span class="Mandetory">*</span> <span class="Mandetory">*</span></label>
                        <div class="position-relative">
                        @Html.DropDownListFor(x => x.CountryID, Model.Countries, HRMS.Models.Common.Constants.SelectCountry, new { @class = "form-control", @required = "required" })
                        <i class="fa fa-chevron-down position-absolute"
                           style="font-size: 10px;color: gray; right: 10px; top: 50%; transform: translateY(-50%); pointer-events: none;"></i>
                       </div>
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Postal Code<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Phone<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Designation<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.Designition, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Gross Salary<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.GrossSalary, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Reason For Leaving<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.ReasionFoLeaving, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="col-md-4 form-group">
                        <label>Supervisor Name<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.SupervisorName, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Supervisor Designation<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.SupervisorDesignition, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>Supervisor Contact No<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.SupervisorContactNo, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="col-md-4 form-group">
                        <label>HR Name<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.HRName, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>HR Email</label>
                        @Html.TextBoxFor(m => m.HREmail, new { @class = "form-control", type = "email", required = "required" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label>HR Contact No<span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(m => m.HRContactNo, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="col-md-12">
                        <input type="submit" value="Submit" class="btn btn-success" />
                        <button type="reset" class="btn btn-danger">Cancel</button>
                    </div>
                </div>
            </div>
            </div>
        </form>
        <div class="table-section">
            <div class="main-header anim fs-6">Employee Employment History</div>

            <div class="table-responsive py-3">
                <table id="employmentGrid" class="table table-striped body-text" style="width:100%">
                    <thead>
                        <tr>
                            <th style="display:none;"></th>
                            <th style="display:none;"></th>
                            <th>Company Name</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Designation</th>
                            <th>Phone</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

    </div>
    
</div>
@section Scripts {
    <script>
          function toastMessage(type , message)
            {

                    $.toast({
                    heading: type,
                    text: message,
                    showHideTransition: 'slide',
                    icon: 'success',
                    position: 'top-right',
                });
            }
        $('#employmentHistoryForm').on('submit', function (e) {
            e.preventDefault();

            var form = $(this);
            var formData = form.serialize();

            $.ajax({
                url: form.attr('action') || window.location.pathname,
                type: 'POST',
                data: formData,
                success: function (result) {
                    if (result && result.success) {
                        $('#employmentGrid').DataTable().ajax.reload();
                        form[0].reset();
                       toastMessage('Success' , result.message);


                    } else {
                        toastEMessage('Error' , result.message);
                    }
                },
                error: function () {
                    toastr.error('Error submitting form');
                }
            });
        });

        $(document).ready(function () {
            var employeeId = '@Model.EmployeeID';

            $('#employmentGrid').DataTable({
                ajax: {
                    url: "/HR/Employee/GetEmploymentHistoryDetails",
                    type: "POST",
                    datatype: "json",
                    data: { EmployeeID: employeeId },
                    dataSrc: function (json) {
                        return json.data || json;
                    }
                },
                ordering: true,
                paging: true,
                searching: true,
                info: true,
                responsive: true,
                columns: [
                    { data: "employmentHistoryID", visible: false },
                    { data: "employeeID", visible: false },
                    { data: "companyName" },
                    { data: "from", render: function (data) { return data ? new Date(data).toLocaleDateString() : ''; } },
                    { data: "to", render: function (data) { return data ? new Date(data).toLocaleDateString() : ''; } },
                    { data: "designition" },
                    { data: "phone" },
                    {
                        data: "employmentHistoryID",
                        orderable: false,
                        searchable: false,
                        render: function (data, type, row) {
                            return `
                                <div class="table-data-feature">
                                    <a class="item" href="#" onclick="editEmploymentHistory(${data})" title="Edit">
                                        <img src="/assets/img/edit.png" width="20" height="20" />
                                    </a>
                                    <a class="item delete-entry" href="#" data-id="${data}" title="Delete">
                                        <img src="/assets/img/delete.png" width="20" height="20" />
                                    </a>
                                </div>
                            `;
                        }
                    }
                ]
            });
                       $('#cancelButton').on('click', function () {
                            $('#employmentHistoryForm')[0].reset();
                            $('#EmploymentHistoryID').val('');

                });
            $(document).on('click', '.delete-entry', function (e) {
                e.preventDefault();
                const id = $(this).data('id');
                    const confirmed = confirm("Are you sure you want to delete this employment history?");
        if (!confirmed) return;
                $.post('/HR/Employee/DeleteEmploymentHistory', { encodedId: id }, function (response) {
                    if (response.success) {
                         const currentFormLangId = $('#EmploymentHistoryID').val();
            if (currentFormLangId == id) {
                $('#EmploymentHistoryID').val('');
            }
                        $('#employmentGrid').DataTable().ajax.reload();
                       toastMessage('Success' , response.message);
                    } else {
                        toastEMessage('Error' , response.message);
                    }
                });
            });
        });
         function toastEMessage(type , message){
          $.toast({
                    heading: 'Error',
                    text: message,
                    showHideTransition: 'slide',
                    icon: 'error',
                    position: 'top-right',
                });
        }
        function editEmploymentHistory(id) {
            var table = $('#employmentGrid').DataTable();
            var rowData = table.rows().data().toArray().find(row => row.employmentHistoryID === id);

            if (!rowData) {
                alert('Record not found!');
                return;
            }

            $('#EmployeeID').val(rowData.employeeID);
            $('#EmploymentHistoryID').val(rowData.employmentHistoryID);
            $('#CompanyName').val(rowData.companyName);
            $('#EmploymentID').val(rowData.employmentID);
            $('#From').val(rowData.from ? new Date(rowData.from).toISOString().split('T')[0] : '');
            $('#To').val(rowData.to ? new Date(rowData.to).toISOString().split('T')[0] : '');
            $('#Address').val(rowData.address);
            $('#Phone').val(rowData.phone);
            $('#City').val(rowData.city);
            $('#State').val(rowData.state);
            $('#CountryID').val(rowData.countryID);
            $('#PostalCode').val(rowData.postalCode);
            $('#ReasionFoLeaving').val(rowData.reasionFoLeaving);
            $('#Designition').val(rowData.designition);
            $('#GrossSalary').val(rowData.grossSalary);
            $('#SupervisorName').val(rowData.supervisorName);
            $('#SupervisorDesignition').val(rowData.supervisorDesignition);
            $('#SupervisorContactNo').val(rowData.supervisorContactNo);
            $('#HRName').val(rowData.hrName);
            $('#HREmail').val(rowData.hrEmail);
            $('#HRContactNo').val(rowData.hrContactNo);
        }
    </script>
}
