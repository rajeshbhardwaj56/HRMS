@using HRMS.Models.Employee
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model Reference

@{
    Layout = $"~/Areas/{HttpContextAccessor.HttpContext.Session.GetString(HRMS.Models.Common.Constants.AreaName)}/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Reference Detail";
}

<div class="main-header anim fs-6">Add / Edit Reference Detail</div>

<form id="referenceForm" method="post">
    <div class="Container">
        <div class="group-box anim" style="--delay: .3s">
        @Html.HiddenFor(m => m.EmployeeID)
        @Html.HiddenFor(m => m.ReferenceDetailID)

        <div class="row mb-3">
            <div class="col-md-4 form-group">
                <label>Name <span class="Mandetory">*</span></label>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required" })
            </div>
            <div class="col-md-4 form-group">
                <label>Contact <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(m => m.Contact, new { @class = "form-control mobile-mask", required = "required" })
            </div>
            <div class="col-md-4 form-group">
                <label>Organization Name <span class="Mandetory">*</span></label>
                @Html.TextBoxFor(m => m.OrgnizationName, new { @class = "form-control", required = "required" })
            </div>
            <div class="col-md-4 form-group">
                <label>Relation With Candidate<span class="Mandetory">*</span></label>
                @Html.TextBoxFor(m => m.RelationWithCandidate, new { @class = "form-control", required = "required" })
            </div>
        </div>

        <div class="col-md-12">
            <input type="submit" value="Submit" class="btn btn-success" />
            <button type="button" id="cancelButton" class="btn btn-danger">Cancel</button>
        </div>
        </div>
    </div>
</form>

<div class="main-header anim fs-6">Employee Reference Details</div>

<div class="table-responsive py-3">
    <table id="referenceGrid" class="table table-striped body-text" style="width:100%">
        <thead>
            <tr>
                <th style="display:none;"></th>
                <th style="display:none;"></th>
                <th>Name</th>
                <th>Contact</th>
                <th>Organization</th>
                <th>Relation</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section Scripts {
    <script>
          function toastMessage(type , message)
            {

                    $.toast({
                    heading: type,
                    text: message,
                    showHideTransition: 'slide',
                    icon: 'success',
                    position: 'top-right',
                });
            }
        $('#referenceForm').on('submit', function (e) {
            e.preventDefault();    
            var form = $(this);
            var formData = form.serialize();
            $.ajax({
                url: form.attr('action') || window.location.pathname,
                type: 'POST',
                data: formData,
                success: function (result) {                       
                    if (result && result.success) {
                   
                        $('#referenceGrid').DataTable().ajax.reload();
                        form[0].reset();
                       toastMessage('Success' , result.message);


                    } else {
                        toastEMessage('Error' , result.message);
                    }
                },
                error: function () {
                    toastr.error('Error submitting form');
                }
            });
        });

        $(document).ready(function () {
         
            var employeeId = '@Model.EmployeeID';

            $('#referenceGrid').DataTable({
                ajax: {
                    url: "/HR/Employee/GetReferenceDetails",
                    type: "POST",
                    data: { EmployeeID: employeeId },
                    dataSrc: function (json) {
                        return json.data || json;
                    }
                },
                ordering: true,
                paging: true,
                searching: true,
                info: true,
                responsive: true,
                columns: [
                    { data: "referenceDetailID", visible: false },
                    { data: "employeeID", visible: false },
                    { data: "name" },
                    { data: "contact" },
                    { data: "orgnizationName" },
                    { data: "relationWithCandidate" },
                    {
                        data: "referenceDetailID",
                        render: function (data) {
                            return `
                                <div class="table-data-feature">
                                    <a href="#" onclick="editReference(${data})" title="Edit">
                                        <img src="/assets/img/edit.png" width="20" height="20" />
                                    </a>
                                    <a href="#" class="delete-entry" data-id="${data}" title="Delete">
                                        <img src="/assets/img/delete.png" width="20" height="20" />
                                    </a>
                                </div>
                            `;
                        }
                    }
                ]
            });
                  $('#cancelButton').on('click', function () {
            $('#referenceForm')[0].reset(); 
            $('#ReferenceDetailID').val(''); 
            
        });
        $(document).on('click', '.delete-entry', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                               const isConfirmed = confirm("Are you sure you want to delete this reference detail?");
        if (!isConfirmed) {
            return;
        }
                $.post('/HR/Employee/DeleteReferenceDetail', { encodedId: id }, function (response) {
                    if (response.success) {
                        debugger;
                          const currentReferenceId = $('#ReferenceDetailID').val();
            if (currentReferenceId == id) {
                $('#ReferenceDetailID').val('');
            }
                        $('#referenceGrid').DataTable().ajax.reload();
                       toastMessage('Success' , response.message);
                    } else {
                        toastEMessage('Error' , response.message);
                    }
                });
            });
        });
             function toastEMessage(type , message){
          $.toast({
                    heading: 'Error',
                    text: message,
                    showHideTransition: 'slide',
                    icon: 'error',
                    position: 'top-right',
                });
        }
        function editReference(id) {
            var table = $('#referenceGrid').DataTable();
            var rowData = table.rows().data().toArray().find(row => row.referenceDetailID === id);

            if (!rowData) {
                alert("Record not found!");
                return;
            }

            $('#ReferenceDetailID').val(rowData.referenceDetailID);
            $('#EmployeeID').val(rowData.employeeID);
            $('#Name').val(rowData.name);
            $('#Contact').val(rowData.contact);
            $('#OrgnizationName').val(rowData.orgnizationName);
            $('#RelationWithCandidate').val(rowData.relationWithCandidate);
        }
            $(document).ready(function () {
            // Input masking for each mobile-mask field
            $('.mobile-mask').on('input', function () {
                let input = $(this).val().replace(/\D/g, '');

                if (input.length > 10) input = input.substring(0, 10);

                let formatted = '';

                if (input.length >= 1) {
                    formatted += '(' + input.substring(0, Math.min(4, input.length)) + ')';
                }

                if (input.length > 4) {
                    formatted += '-' + input.substring(4, Math.min(7, input.length));
                }

                if (input.length > 7) {
                    formatted += '-' + input.substring(7, 10);
                }

                $(this).val(formatted);
            });


        });
    </script>
}
