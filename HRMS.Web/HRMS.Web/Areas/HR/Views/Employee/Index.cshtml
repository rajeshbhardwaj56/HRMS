﻿@using HRMS.Models.Employee;
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model EmployeeModel
@{
    Layout = String.Format("~/Areas/{0}/Views/Shared/_Layout.cshtml", @HttpContextAccessor.HttpContext.Session.GetString(HRMS.Models.Common.Constants.AreaName));
    ViewData["Title"] = "Employment Details";
    var ProfilePhoto = "";
    if (!string.IsNullOrEmpty(Model.ProfilePhoto))
    {
        ProfilePhoto = Model.ProfilePhoto;
    }
    else
    {
        ProfilePhoto = HRMS.Models.Common.Constants.NoImagePath;
    }
    var PancardPhoto = "";
    if (!string.IsNullOrEmpty(Model.PanCardImage))
    {
        PancardPhoto = @Model.PanCardImage;
    }
    else
    {
        PancardPhoto = HRMS.Models.Common.Constants.NoImagePath;
    }

    var AddharCardPhoto = "";
    if (!string.IsNullOrEmpty(Model.AadhaarCardImage))
    {
        AddharCardPhoto = @Model.AadhaarCardImage;
    }
    else
    {
        AddharCardPhoto = HRMS.Models.Common.Constants.NoImagePath;
    }
    bool isEdit = Model != null && Model.EmployeeID > 0;
    var headerText = isEdit ? "Edit Employee" : "New Employee";
}



<div class="main-header anim" style="--delay: 0s">
    @headerText
    @if (isEdit)
    {
        <div class="user-settings dropdown">
            <div class="user-name">Additional Details</div>
            <a class="nav-link dropdown-toggle toggle-change" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="true">
              
                <svg viewBox="0 0 492 492" fill="currentColor">
                    <path d="M484.13 124.99l-16.11-16.23a26.72 26.72 0 00-19.04-7.86c-7.2 0-13.96 2.79-19.03 7.86L246.1 292.6 62.06 108.55c-5.07-5.06-11.82-7.85-19.03-7.85s-13.97 2.79-19.04 7.85L7.87 124.68a26.94 26.94 0 000 38.06l219.14 219.93c5.06 5.06 11.81 8.63 19.08 8.63h.09c7.2 0 13.96-3.57 19.02-8.63l218.93-219.33A27.18 27.18 0 00492 144.1c0-7.2-2.8-14.06-7.87-19.12z"></path>
                </svg>
            </a>

            <div class="dropdown-menu" aria-labelledby="navbarDropdown" data-bs-popper="none">
               @*  <div class="dropdown-item">
                </div>
                <div class="dropdown-divider"></div> *@
                <div class="">
                    <ul class="list-unstyled">
                        <li>
                            <a class="dropdown-item" href="/employee/myinfo/index">
                                <span class="mr-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user">
                                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                                        <circle cx="12" cy="7" r="4"></circle>
                                    </svg>
                                </span>
                                Profile
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="/Home/ChangePassword">
                                <span class="mr-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-settings">
                                        <circle cx="12" cy="12" r="3"></circle>
                                        <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>
                                    </svg>
                                </span>
                                ChangePassword
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="dropdown-divider"></div>
                <ul class="list-unstyled">
                    <li>
                        <a class="dropdown-item" href="/">
                            <span class="mr-2">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-power">
                                    <path d="M18.36 6.64a9 9 0 1 1-12.73 0"></path>
                                    <line x1="12" y1="2" x2="12" y2="12"></line>
                                </svg>
                            </span>
                            Sign Out
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    }
</div>
<form method="post" enctype="multipart/form-data">
    <div class="Container">


        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">Personal Details</div>
            @Html.HiddenFor(m => m.EmployeeID)
            @Html.HiddenFor(m => m.CompanyID)
            @Html.HiddenFor(m => m.ProfilePhoto)
            @Html.HiddenFor(m => m.PanCardImage)
            @Html.HiddenFor(m => m.AadhaarCardImage)
            @* <div class="col-md-12" style="background-color: #a7b5ce; padding: 5px;padding-left: 10px;">
            <label for="validationDefault01" class="form-label">Personal Details </label>
            @Html.HiddenFor(m => m.EmployeeID)
            @Html.HiddenFor(m => m.CompanyID)

            </div> *@
            <div class="row">


                <div class="col-md-4 form-group">
                    <label>First Name <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.FirstName, new { @class = "form-control", @required = "required" })
                    @*  @Html.ValidationMessageFor(m => m.FirstName) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>Middle Name <span class="Mandetory"> </span></label>
                    @Html.TextBoxFor(a => a.MiddleName, new { @class = "form-control" })
                </div>

                <div class="col-md-4 form-group">
                    <label>Surname <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.Surname, new { @class = "form-control", @required = "required" })
                    @*   @Html.ValidationMessageFor(m => m.Surname) *@
                </div>


                <div class="col-md-4 form-group">
                    <label>Photo</label>
                    <div class="row d-flex align-items-center">
                        <div class="col-md-4">
                            <img id="previewImage" src="@ProfilePhoto"
                                 onerror="this.onerror=null; this.src='@(HRMS.Models.Common.Constants.NoImagePath)'"
                                 style="width:100px; height:100px" />
                        </div>
                        <div class="col-md-8">
                            <input type="file" name="postedFiles" accept="image/*" onchange="showPreview(event)" />
                        </div>
                    </div>
                </div>


                <div class="col-md-12 form-group">
                    <label>Address of Correspondence <span class="Mandetory">*</span></label>
                    @Html.TextAreaFor(a => a.CorrespondenceAddress, new { @class = "form-control", @required = "required" })
                    @*  @Html.ValidationMessageFor(m => m.CorrespondenceAddress) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>City <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.CorrespondenceCity, new { @class = "form-control", @required = "required" })
                    @*   @Html.ValidationMessageFor(m => m.CorrespondenceCity) *@
                </div>


                <div class="col-md-4 form-group">
                    <label>Pin <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.CorrespondencePinCode, new { @class = "form-control", @required = "required" })
                    @*  @Html.ValidationMessageFor(m => m.CorrespondencePinCode) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>State <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.CorrespondenceState, new { @class = "form-control", @required = "required" })
                    @* @Html.ValidationMessageFor(m => m.CorrespondenceState) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>Country <span class="Mandetory">*</span></label>
                    @Html.DropDownListFor(x => x.CorrespondenceCountryID, Model.Countries, HRMS.Models.Common.Constants.SelectCountry, new { @class = "form-control", @required = "required" })
                </div>

                <div class="col-md-4 form-group">
                    <label>Landline <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.Landline, new { @class = "form-control" })
                    @*  @Html.ValidationMessageFor(m => m.Landline) *@
                </div>


                <div class="col-md-4 form-group">
                    <label>Mobile <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.Mobile, new { @class = "form-control mobile-mask", @required = "required" })
                </div>


                <div class="col-md-4 form-group">
                    <label>Personal Email Address <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.PersonalEmailAddress, new { @class = "form-control", @required = "required" })
                    @*  @Html.ValidationMessageFor(m => m.PersonalEmailAddress) *@
                </div>
                <div class="col-md-4 form-group">
                    <label>Gender <span class="Mandetory">*</span></label>
                    @Html.DropDownListFor(a => a.Gender, new List<SelectListItem>
                    {
                    new SelectListItem { Text = "Select Gender", Value = "" },
                    new SelectListItem { Text = "Male", Value = "1" },
                    new SelectListItem { Text = "Female", Value = "2" },
                    new SelectListItem { Text = "Other", Value = "3" }
                    }, new { @class = "form-control", @required = "required" })
                </div>
                <div class="col-md-12 form-group">
                    <label>Permanent Address <span class="Mandetory">*</span></label>
                    @Html.TextAreaFor(a => a.PermanentAddress, new { @class = "form-control", @required = "required" })
                    @*     @Html.ValidationMessageFor(m => m.PermanentAddress) *@
                </div>


                <div class="col-md-4 form-group">
                    <label>City <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.PermanentCity, new { @class = "form-control", @required = "required" })
                    @*  @Html.ValidationMessageFor(m => m.PermanentCity) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>Pin <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.PermanentPinCode, new { @class = "form-control", @required = "required" })
                    @*   @Html.ValidationMessageFor(m => m.PermanentPinCode) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>State <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.PermanentState, new { @class = "form-control", @required = "required" })
                    @*  @Html.ValidationMessageFor(m => m.PermanentState) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>Country <span class="Mandetory">*</span></label>
                    @Html.DropDownListFor(x => x.PermanentCountryID, Model.Countries, HRMS.Models.Common.Constants.SelectCountry, new { @class = "form-control", @required = "required" })
                </div>

                <div class="col-md-4 form-group">
                    <label>Telephone </label>
                    @Html.TextBoxFor(a => a.Telephone, new { @class = "form-control mobile-mask" })
                    @*  @Html.ValidationMessageFor(m => m.Telephone) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>Date of Birth <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @required = "required" })
                    @* @Html.ValidationMessageFor(m => m.DateOfBirth) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>Place of Birth <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.PlaceOfBirth, new { @class = "form-control", @required = "required" })
                    @*   @Html.ValidationMessageFor(m => m.PlaceOfBirth) *@
                </div>


                <div class="col-md-4 form-group">
                    <label>Contact Person Name for Verification <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.VerificationContactPersonName, new { @class = "form-control", @required = "required" })
                    @*  @Html.ValidationMessageFor(m => m.VerificationContactPersonName) *@
                </div>

                <div class="col-md-4 form-group">
                    <label>Contact No <span class="Mandetory">*</span></label>
                    @Html.TextBoxFor(a => a.VerificationContactPersonContactNo, new { @class = "form-control mobile-mask", @required = "required" })
                    @* @Html.ValidationMessageFor(m => m.VerificationContactPersonContactNo) *@
                </div>
            </div>
        </div>




        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">Family Details <input type="button" style="float:right;" class="btn btn-info" id="AddNewFamily" value="Add New Family" /></div>
            @*  <div class="row">
            <div class="col-md-12" style="background-color: #a7b5ce; padding: 5px;padding-left: 10px;">
            <label for="validationDefault01" class="form-label">Family Details </label>   <input type="button" style="float:right;" class="btn btn-info" id="AddNewFamily" value="Add New Family" />
            </div>
            </div> *@

            <div class="row">
                <div class="col-md-12" id="FamilyDetails">
                    @Html.Partial("_FamilyDetails", Model)
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-6 form-group">
                    <label>Do you have any relatives working with Protalk Logistics? </label>
                </div>
                <div class="col-md-6 form-group">
                    @Html.CheckBoxFor(x => x.IsRelativesWorkingWithCompany)
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 form-group">
                    <label>if Yes Elaborate</label>
                </div>
                <div class="col-md-6 form-group">
                    @Html.TextAreaFor(a => a.RelativesDetails, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 form-group">
                    <label>Have you been refered by an Protalk Logistics employee?</label>
                </div>
                <div class="col-md-6 form-group">
                    @Html.CheckBoxFor(x => x.IsReferredByExistingEmployee)
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 form-group">
                    <label>if Yes Please mention Name and Designition</label>
                </div>
                <div class="col-md-6 form-group">
                    @Html.TextBoxFor(a => a.ReferredByEmployeeID, new { @class = "form-control" })
                </div>
            </div>


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Blood Group</label>
                        @Html.TextBoxFor(a => a.BloodGroup, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Allergies</label>
                        @Html.TextBoxFor(a => a.Allergies, new { @class = "form-control" })
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-md-6 form-group">
                    <label>Please mention, if you any mazor illness/Handicap/Permanent disabilities or any gamily history on same.</label>
                </div>
                <div class="col-md-6 form-group">
                    @Html.TextAreaFor(a => a.MajorIllnessOrDisability, new { @class = "form-control" })
                </div>
            </div>


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Pan No <span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(a => a.PANNo, new { @class = "form-control", @required = "required" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label> Pan Card No <span class="Mandetory">*</span></label>
                        <div class="col-md-4">
                            <img id="PanpreviewImage" src="@Html.Raw(PancardPhoto)"
                                 onerror="this.onerror=null; this.src='@(HRMS.Models.Common.Constants.NoImagePath)'"
                                 style="width:100px; height:100px; display:none;" />
                            <iframe id="PanpreviewPDF" style="width:100px; height:100px; display:none;" frameborder="0"></iframe>
                        </div>
                        <div class="col-md-8">
                            <input type="file" name="PanPostedFile" accept="image/*,application/pdf" onchange="PanPostedFilePreview(event)" />
                        </div>
                    </div>
                </div>
            </div>





            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label> Aadhar Card No <span class="Mandetory">*</span></label>
                        @Html.TextBoxFor(a => a.AadharCardNo, new { @class = "form-control", @required = "required" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label> Aadhaar Card No <span class="Mandetory">*</span></label>
                        <div class="col-md-4">
                            <!-- Image Preview -->
                            <img id="AadhaarpreviewImage"
                                 src="@AddharCardPhoto"
                                 onerror="this.onerror=null; this.src='@(HRMS.Models.Common.Constants.NoImagePath)'"
                                 style="width:100px; height:100px; display:none;" />

                            <!-- PDF Preview -->
                            <iframe id="AadhaarpreviewPDF"
                                    src="@AddharCardPhoto"
                                    style="width:100px; height:100px; display:none;"
                                    frameborder="0">
                            </iframe>
                        </div>
                        <div class="col-md-8">
                            <input type="file"
                                   name="AadhaarPostedFile"
                                   accept="image/*,.pdf"
                                   onchange="AadhaarPreview(event)" />
                        </div>
                    </div>
                </div>
            </div>

        </div>






        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">Educational/Professional Trainnings <input type="button" style="float:right;" class="btn btn-info" id="AddNewEducation" value="Add New Education" /></div>
            <div class="row">
                <div class="col-md-12" id="EducationalDetails">
                    @Html.Partial("_EducationalDetails", Model)
                </div>


            </div>


            <div class="form-group">
                <label>Pan No <span class="Mandetory">*</span></label>
                @Html.TextBoxFor(a => a.PANNo, new { @class = "form-control", @required = "required" })
            </div>

            <div class="form-group">
                <label>Mention any Awards/Achievements/Scholarship recieved in you educational career <span class="Mandetory">*</span></label>
                @Html.TextAreaFor(x => x.AwardsAchievements, new { @class = "form-control", @required = "required" })
            </div>

            <div class="form-group">
                <label>State gaps in education, if any <span class="Mandetory">*</span></label>
                @Html.TextAreaFor(x => x.EducationGap, new { @class = "form-control", @required = "required" })
            </div>


        </div>

        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">Language Proficiency <input type="button" style="float:right;" class="btn btn-info" id="AddNewLanguage" value="Add New Language" /></div>
            <div class="row">
                <div class="col-md-12" id="LanguageDetails">
                    @Html.Partial("_LanguageDetails", Model)
                </div>
            </div>
            <div class="form-group mt-3">
                <label>IT Skills/Knowledge (Indicate your level of Proficiency)</label>
                @Html.TextAreaFor(x => x.ITSkillsKnowledge, new { @class = "form-control" })
            </div>
        </div>
        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">Employment Record <input type="button" style="float:right;" class="btn btn-info" id="AddNewEmployment" value="Add New Employment" /></div>

            <div class="row">
                <div class="col-md-12" id="EmploymentDetails">
                    @Html.Partial("_EmploymentHistory", Model)
                </div>
            </div>
        </div>



        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">References</div>
            <div class="row">
                <div class="col-md-12" id="ReferenceDetails">
                    @Html.Partial("_ReferenceDetails", Model)
                </div>
            </div>
        </div>



        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">General Information</div>
            <div class="form-group mt-3">
                <label>Information of extra-curricular/leisure activities, Hobbies</label>
                @Html.TextAreaFor(a => a.ExtraCuricuarActivities, new { @class = "form-control" })
            </div>
            <div class="form-group mt-3">
                <label>Foriegn Countries visited in last 5 years</label>
                @Html.TextAreaFor(a => a.ForiegnCountryVisits, new { @class = "form-control" })
            </div>

            <div class="row">
                <div class="col-md-12">
                    <b> Person to be contacted, in case of emergency</b>
                </div>

                <div class="col-md-3">
                    <label>Contact Person Name</label>
                    @Html.TextBoxFor(a => a.ContactPersonName, new { @class = "form-control" })
                </div>
                <div class="col-md-3">
                    <label>Relationship</label>
                    @Html.TextBoxFor(a => a.ContactPersonRelationship, new { @class = "form-control" })
                </div>

                <div class="col-md-3">
                    <label>Mobile</label>
                    @Html.TextBoxFor(a => a.ContactPersonMobile, new { @class = "form-control mobile-mask" })

                </div>

                <div class="col-md-3">
                    <label>Tel</label>
                    @Html.TextBoxFor(a => a.ContactPersonTelephone, new { @class = "form-control mobile-mask" })
                </div>
            </div>
        </div>
        <div class="group-box anim" style="--delay: .3s">
            <div class="small-header">Employee Status  (Active/In-active)</div>
            <div class="col-md-4 form-group">
                <label>Status</label>
                @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <input type="submit" value="Submit" class="btn btn-success" />
                <a href="/hr/employee/EmployeeListing" class="btn btn-danger" type="reset">Cancel</a>
            </div>
        </div>

    </div>

</form>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>

<script type="text/javascript">

    var url = "@Url.Action("AddNewFamilyMember", "Employee")";
    var urlEducationalDetails = "@Url.Action("AddNewEducationalDetail", "Employee")";
    var urlAddNewLanguageDetails = "@Url.Action("AddNewLanguageDetail", "Employee")";
    var urlAddNewEmploymentDetails = "@Url.Action("AddNewEmploymentHistory", "Employee")";

    function AddNewFamily(isDeleted) {
        var familyMembers = [];
        if ($('.FamilyName').length > 0) {
            var elementID = '';

            $('.FamilyName').each(function (index, element) {
                elementID = element.id;
                var familyMember = {
                    FamilyName: $("#" + elementID).val(),
                    EmployeesFamilyDetailID: $("#" + elementID.replace("FamilyName", "EmployeesFamilyDetailID")).val(),
                    Relationship: $("#" + elementID.replace("FamilyName", "Relationship")).val(),
                    Age: $("#" + elementID.replace("FamilyName", "Age")).val(),
                    Details: $("#" + elementID.replace("FamilyName", "Details")).val()
                };
                familyMembers.push(familyMember);
            });
        }
        var model = { FamilyDetails: familyMembers, isDeleted: isDeleted };

        $.post(url, model, function (res) {
            //res contains the markup returned by the partial view
            //You probably want to set that to some Div.
            $("#FamilyDetails").html(res);
        });
    }


    function AddNewEducation(isDeleted) {
        var EducationalDetails = [];
        if ($('.EducationalDetails').length > 0) {
            var elementID = '';
            $('.EducationalDetails').each(function (index, element) {
                elementID = element.id;
                var EducationalDetail = {
                    School_University: $("#" + elementID).val(),
                    EducationDetailID: $("#" + elementID.replace("School_University", "EducationDetailID")).val(),
                    Qualification: $("#" + elementID.replace("School_University", "Qualification")).val(),
                    YearOfPassing: $("#" + elementID.replace("School_University", "YearOfPassing")).val(),
                    Percentage: $("#" + elementID.replace("School_University", "Percentage")).val(),
                    Major_OptionalSubjects: $("#" + elementID.replace("School_University", "Major_OptionalSubjects")).val(),
                    CertificateImage: $("#" + elementID.replace("School_University", "CertificateImage_" + (index + 1))).val()
                };
                EducationalDetails.push(EducationalDetail);
            });
        }
        var model = { EducationalDetails: EducationalDetails, isDeleted: isDeleted };

        $.post(urlEducationalDetails, model, function (res) {
            //res contains the markup returned by the partial view
            //You probably want to set that to some Div.
            $("#EducationalDetails").html(res);
        });
    }


    function AddNewLanguage(isDeleted) {
        var LanguageDetails = [];
        if ($('.LanguageID').length > 0) {
            var elementID = '';
            $('.LanguageID').each(function (index, element) {
                elementID = element.id;
                var LanguageDetail = {
                    LanguageID: $("#" + elementID).val(),
                    LanguageDetailID: $("#" + elementID.replace("LanguageID", "EducationDetailID")).val(),
                    IsSpeak: $("#" + elementID.replace("LanguageID", "IsSpeak")).is(":checked"),
                    IsRead: $("#" + elementID.replace("LanguageID", "IsRead")).is(":checked"),
                    IsWrite: $("#" + elementID.replace("LanguageID", "IsWrite")).is(":checked")
                };
                LanguageDetails.push(LanguageDetail);
            });
        }
        var model = { LanguageDetails: LanguageDetails, isDeleted: isDeleted };

        $.post(urlAddNewLanguageDetails, model, function (res) {
            //res contains the markup returned by the partial view
            //You probably want to set that to some Div.
            $("#LanguageDetails").html(res);
        });
    }

    function AddNewEmployment(isDeleted) {
        var EmploymentHistory = [];
        if ($('.EmploymentHistory').length > 0) {
            var elementID = '';
            $('.EmploymentHistory').each(function (index, element) {
                elementID = element.id;
                var EmploymentDetail = {
                    CompanyName: $("#" + elementID).val(),
                    EmployementID: $("#" + elementID.replace("CompanyName", "EmployementID")).val(),
                    From: $("#" + elementID.replace("CompanyName", "From")).val(),
                    To: $("#" + elementID.replace("CompanyName", "To")).val(),
                    Address: $("#" + elementID.replace("CompanyName", "Address")).val(),
                    Phone: $("#" + elementID.replace("CompanyName", "Phone")).val(),
                    City: $("#" + elementID.replace("CompanyName", "City")).val(),
                    State: $("#" + elementID.replace("CompanyName", "State")).val(),
                    CountryID: $("#" + elementID.replace("CompanyName", "CountryID")).val(),
                    PostalCode: $("#" + elementID.replace("CompanyName", "PostalCode")).val(),
                    ReasionFoLeaving: $("#" + elementID.replace("CompanyName", "ReasionFoLeaving")).val(),
                    Designition: $("#" + elementID.replace("CompanyName", "Designition")).val(),
                    GrossSalary: $("#" + elementID.replace("CompanyName", "GrossSalary")).val(),
                    SupervisorName: $("#" + elementID.replace("CompanyName", "SupervisorName")).val(),
                    SupervisorDesignition: $("#" + elementID.replace("CompanyName", "SupervisorDesignition")).val(),
                    SupervisorContactNo: $("#" + elementID.replace("CompanyName", "SupervisorContactNo")).val(),
                    HRName: $("#" + elementID.replace("CompanyName", "HRName")).val(),
                    HREmail: $("#" + elementID.replace("CompanyName", "HREmail")).val(),
                    HRContactNo: $("#" + elementID.replace("CompanyName", "HRContactNo")).val(),
                };

                EmploymentHistory.push(EmploymentDetail);
            });
        }
        var model = { EmploymentHistory: EmploymentHistory, isDeleted: isDeleted };

        $.post(urlAddNewEmploymentDetails, model, function (res) {
            //res contains the markup returned by the partial view
            //You probably want to set that to some Div.
            $("#EmploymentDetails").html(res);
        });
    }

    $(document).ready(function () {
        var familyMembers = [];
        $('#AddNewFamily').click(function () {
            AddNewFamily(false);
        });

        $('#AddNewEducation').click(function () {
            AddNewEducation(false);
        });
        $('#AddNewLanguage').click(function () {
            AddNewLanguage(false);
        });
        $('#AddNewEmployment').click(function () {
            AddNewEmployment(false);
        });

    });
      function showPreview(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const previewImage = document.getElementById('previewImage');
                previewImage.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    }
    $(document).ready(function () {
        // Apply the phone number mask
        $('.mobile-mask').mask('(000) 000-0000');
    });
         function PanPostedFilePreview(event) {
        const file = event.target.files[0];
        if (file) {
            const previewImage = document.getElementById('PanpreviewImage');
            const pdfPreview = document.getElementById('PanpreviewPDF');
            const reader = new FileReader();

            reader.onload = function (e) {
                const result = e.target.result;

                if (file.type.startsWith('image/')) {
                    previewImage.src = result;
                    previewImage.style.display = 'block';
                    pdfPreview.style.display = 'none';
                } else if (file.type === 'application/pdf') {
                    pdfPreview.src = result;
                    pdfPreview.style.display = 'block';
                    previewImage.style.display = 'none';
                } else {
                    alert('Unsupported file type. Please upload an image or a PDF.');
                    previewImage.style.display = 'none';
                    pdfPreview.style.display = 'none';
                }
            };

            reader.readAsDataURL(file);
        }
    }
      window.onload = function () {
        const fullPath = '@Html.Raw(AddharCardPhoto)'; // Avoids &amp; encoding
        const filePath = fullPath.toLowerCase();

        const imagePreview = document.getElementById('AadhaarpreviewImage');
        const pdfPreview = document.getElementById('AadhaarpreviewPDF');


        if (filePath.includes('.pdf')) {
            pdfPreview.src = fullPath;
            pdfPreview.style.display = 'block';
            imagePreview.style.display = 'none';
        } else   {
            imagePreview.src = fullPath;
            imagePreview.style.display = 'block';
            pdfPreview.style.display = 'none';
        }


         const panFullPath = '@Html.Raw(PancardPhoto)';
    const panFilePath = panFullPath.toLowerCase();
    const panImagePreview = document.getElementById('PanpreviewImage');
    const panPdfPreview = document.getElementById('PanpreviewPDF');

    if (panFilePath.includes('.pdf')) {
        panPdfPreview.src = panFullPath;
        panPdfPreview.style.display = 'block';
        panImagePreview.style.display = 'none';
    } else {
        panImagePreview.src = panFullPath;
        panImagePreview.style.display = 'block';
        panPdfPreview.style.display = 'none';
    }
    };
    // On file selection, preview image or PDF
    function AadhaarPreview(event) {
        const file = event.target.files[0];
        const imagePreview = document.getElementById('AadhaarpreviewImage');
        const pdfPreview = document.getElementById('AadhaarpreviewPDF');

        if (file) {
            const fileType = file.type;
            const reader = new FileReader();

            reader.onload = function (e) {
                const result = e.target.result;

                if (fileType.startsWith('image/')) {
                    imagePreview.src = result;
                    imagePreview.style.display = 'block';
                    pdfPreview.style.display = 'none';
                } else if (fileType === 'application/pdf') {
                    pdfPreview.src = result;
                    pdfPreview.style.display = 'block';
                    imagePreview.style.display = 'none';
                } else {
                    alert('Unsupported file type. Please upload an image or a PDF.');
                    imagePreview.style.display = 'none';
                    pdfPreview.style.display = 'none';
                }
            };

            reader.readAsDataURL(file); // Triggers preview
        }
    }
</script>
