@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using HRMS.Models;
@using HRMS.Models.Common;
<link href="~/assets/pages/gridlist.css" rel="stylesheet" />

@model HRMS.Models.Common.Results
@{
	Layout = String.Format("~/Areas/{0}/Views/Shared/_Layout.cshtml", @HttpContextAccessor.HttpContext.Session.GetString(HRMS.Models.Common.Constants.AreaName));
	var RoleName = Convert.ToInt64(this.Context.Session.GetString(Constants.RoleID));

	ViewData["Title"] = "Employee";

	var success = TempData["Success"];
	var Err = TempData["Error"];
}
 
<div class="main-header anim" style="--delay: 0s">
	Employee Roster List
	<section class="right-button-employee">
		<a href="~/HR/employee/AddUpdateWeekOffRoster"> <button type="button" class="btn btn-addBtn" id="openFormBtn">Add WeekOff</button></a>
		<a href="~/Admin/Dashboard/UploadRosterExcel"> <button type="button" class="btn btn-addBtn" id="openFormBtn">Import WeekOff Roster</button></a>
	</section>
</div>

<!-- Year & Month Dropdowns -->



<div class="table-responsive py-3">
	<div class="row mb-3">
		<div class="col-md-2">
			<label for="yearDropdown">Year</label>
			<div class="custom-select-wrapper">
				<select class="form-select custom-select" id="yearDropdown"></select>
			</div>
		</div>
		<div class="col-md-2">
			<label for="monthDropdown">Month</label>
			<div class="custom-select-wrapper">
				<select class="form-select custom-select" id="monthDropdown">
					<option value="">--Months--</option>
					<option value="1">January</option>
					<option value="2">February</option>
					<option value="3">March</option>
					<option value="4">April</option>
					<option value="5">May</option>
					<option value="6">June</option>
					<option value="7">July</option>
					<option value="8">August</option>
					<option value="9">September</option>
					<option value="10">October</option>
					<option value="11">November</option>
					<option value="12">December</option>
				</select>
			</div>
		</div>
	</div>
	<table id="tblEmployeeWeekOffListing" class="table table-striped body-text" style="width:100%">
		<thead>
			<tr>
				<th> </th>
				<th>Emp No</th>
				<th>Employee Name</th>
				<th>WeekOff 1</th>
				<th>WeekOff 2</th>
				<th>WeekOff 3</th>
				<th>WeekOff 4</th>
				<th>WeekOff 5</th>
				<th>WeekOff 6</th>
				<th>WeekOff 7</th>
				<th>WeekOff 8</th>
				<th>WeekOff 9</th>
				<th>Modified By</th>
				<th>ModifiedDate</th>
				<th>Action</th>
			</tr>
		</thead>
	</table>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		// Populate year dropdown and set current year/month
		var currentDate = new Date();
		var currentYear = currentDate.getFullYear();
		var currentMonth = currentDate.getMonth() + 1; // months are 0-based

		var yearDropdown = $('#yearDropdown');
		yearDropdown.append('<option value="">--Years--</option>');
		for (var y = currentYear; y >= currentYear - 0; y--) {
			var selected = (y === currentYear) ? 'selected' : '';
			yearDropdown.append('<option value="' + y + '" ' + selected + '>' + y + '</option>');
		}

		$('#monthDropdown').val(currentMonth);

		// Initialize DataTable
		var table = $('#tblEmployeeWeekOffListing').DataTable({
			"processing": true,
			"serverSide": true,
			"ajax": {
				"url": "GetEmployeesWeekOffRoster/",
				"type": "POST",
				"datatype": "json",
				"data": function (d) {
					var pageNumber = Math.floor(d.start / d.length) + 1;
					return {
						sEcho: d.draw,
						iDisplayStart: d.start,
						iDisplayLength: d.length,
						sSearch: d.search.value,
						PageNumber: pageNumber,
						PageSize: d.length,
						Year: $('#yearDropdown').val(),
						Month: $('#monthDropdown').val()
					};
				}
			},
			"ordering": true,
			"paging": true,
			"searching": true,
			"info": true,
			"columns": [
				{ "data": "id", "autoWidth": true, "visible": false },
				{ "data": "employeeNumber", "autoWidth": true },
				{ "data": "employeeName", "autoWidth": true },
				{
					"data": "weekOff1", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff2", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff3", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff4", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff5", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff6", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff7", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff8", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},
				{
					"data": "weekOff9", "autoWidth": true,
					"render": function (data) { return formatDateCell(data); }
				},





				{ "data": "modifiedName", "autoWidth": true },
				{
					"data": "modifiedDate", "autoWidth": true,
					"render": function (data) { return formatDateTimeCell(data); }
				},
				{
					"data": null,
					"render": function (data, type, row) {
						var linkEdit = '<div class="table-data-feature">' +
							'<a data-toggle="tooltip" data-placement="top" class="item" href="AddUpdateWeekOffRoster?id=' + row.encryptedIdentity + '&emp=' + row.encryptedEmployeeId + '" title="Edit">' +
							'<img src="/assets/img/edit.png" width="20" height="20" />' +
							'</a></div>';

					var DeleteRecord = '<div class="table-data-feature">' +
	'<a data-toggle="tooltip" data-placement="top" class="item delete-button" href="DeleteWeekOffRoster?id=' + row.encryptedIdentity + '" title="Delete">' +
	'<img src="/assets/img/delete.png" width="20" height="20" />' +
	'</a></div>';


						return linkEdit + DeleteRecord;
					},
					"orderable": false,
					"className": "Edit-Button"
				}
			],
			"columnDefs": [
				{ "targets": [0], "orderable": false, "visible": false },
				{ "targets": [1], "orderable": false }
			],
			"responsive": true
		});

		// Reload table when dropdowns change
		$('#yearDropdown, #monthDropdown').change(function () {
			table.ajax.reload();
		});
	});
		// Handle delete confirmation
	$(document).on('click', '.delete-button', function (e) {
		e.preventDefault(); // stop immediate navigation

		var url = $(this).attr('href');

		if (confirm("Are you sure you want to delete this WeekOff Roster record? ")) {
			window.location.href = url; // navigate if confirmed
		}
	});

	function formatDateCell(data) {
		if (!data) return "";
		const date = new Date(data);
		if (isNaN(date)) return data;
		const day = date.getDate().toString().padStart(2, '0');
		const month = (date.getMonth() + 1).toString().padStart(2, '0');
		const year = date.getFullYear();
		return `${day}-${month}-${year}`;
	}

	function formatDateTimeCell(data) {
		if (!data) return "";
		var date = new Date(data);
		if (isNaN(date)) return data;
		return date.toLocaleDateString('en-GB') + " " + date.toLocaleTimeString('en-GB', {
			hour: '2-digit',
			minute: '2-digit',
			hour12: true
		});
	}
</script>
