@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Configuration
@using HRMS.Models.Common
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IConfiguration _configuration
@{
	Layout = String.Format("~/Areas/{0}/Views/Shared/_Layout.cshtml", @HttpContextAccessor.HttpContext.Session.GetString(HRMS.Models.Common.Constants.AreaName));

}
<style>
	.fade:not(.show) {
		opacity: 1;
	}
</style>

<section class="lower-section">
	<div class="container-fluid">
		<div class="row">
			<div class="tab-pane fade" id="attendance1" role="tabpanel" aria-labelledby="attendance1-tab">
				<div class="group-box anim">
					<div class="tabsInfo" id="">
						<h3>Attendance Info</h3>
						<nav>
							<div class="nav nav-tabs mb-3" id="myTab-timeoff" role="tablist">
								<button class="nav-link active" id="applied-leave-tab1" data-bs-toggle="tab" data-bs-target="#applied-leave-tab" type="button" role="tab" aria-controls="applied-leave-tab" aria-selected="true">
									Attendance For Approval
								</button>
								<button class="nav-link  " id="leave-approved-tab1" data-bs-toggle="tab" data-bs-target="#leave-approved-tab" type="button" role="tab" aria-controls="leave-approved-tab" aria-selected="false" onclick="LeavesForApproved()">Approved Attendance</button>
								<button class="nav-link  " id="leave-Reject-tab1" data-bs-toggle="tab" data-bs-target="#leave-Reject-tab" type="button" role="tab" aria-controls="leave-Reject-tab" aria-selected="false" onclick="LeavesForReject()">Rejected Attendance</button>
							</div>
						</nav>
						<div class="tab-content" id="nav-tabContent1">
							<div class="tab-pane fade show active" id="applied-leave-tab" role="tabpanel" aria-labelledby="applied-leave-tab1">
								<div class="group-box anim">
									<div class="tabsInfo" id="myTabContent-timeoff">
										<h3>Attendance For Approval</h3>
									</div>
									<div>

										<label>
											View As
											<input type="radio" name="attendanceStatus" value="@(AttendanceStatusId.Pending)"> L1 Manager
										</label>
										<label>
											<input type="radio" name="attendanceStatus" value="@(AttendanceStatusId.L1Approved)" checked> L2 Manager
										</label>
									</div>
									<div role="tabpanel" aria-labelledby="apply-tab">
										<div class="row">
											<div class="col-lg-12 col-md-12 col-sm-12">
												<div class="card">
													<div class="card-body">
														<table id="tblAttendanceForApproval" class="table table-striped body-text" style="width:100%">
															<thead>
																<tr>
																	<th>Employee Name</th>
																	<th>From Date</th>
																	<th>To Date</th>
																	<th>Work Date</th>
																	<th>Total Hours</th>
																	<th>Status</th>
																	<th>Action</th>
																</tr>
															</thead>

														</table>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>


							</div>
							<div class="tab-pane fade" id="leave-approved-tab" role="tabpanel" aria-labelledby="leave-approved-tab1">

								<div class="group-box anim">
									<div class="tabsInfo" id="myTabContent-timeoff">
										<h3>Approved Attendance</h3>

									</div>
									<div>

										<label>
											View As
											<input type="radio" name="approvedAttendanceStatus" value="@(AttendanceStatusId.L1Approved)"> L1 Manager
										</label>
										<label>
											<input type="radio" name="approvedAttendanceStatus" value="@(AttendanceStatusId.L2Approved)" checked> L2 Manager
										</label>

									</div>

									<div role="tabpanel" aria-labelledby="apply-tab">
										<div class="row">
											<div class="col-lg-12 col-md-12 col-sm-12">
												<div class="card">
													<div class="card-body">
														<table id="tblLeavesForApproved" class="table table-striped body-text" style="width:100%">
															<thead>
																<tr>
																	<th class="first" style="visibility:hidden"> </th>
																	<th>Employee Number</th>
																	<th>Employee Name</th>
																	<th>From Date</th>
																	<th>To Date</th>
																	<th>Type</th>
																	<th>Days</th>
																	<th>Status</th>
																	<th>Reason</th>
																</tr>
															</thead>

														</table>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>

							<div class="tab-pane fade" id="leave-Reject-tab" role="tabpanel" aria-labelledby="leave-Reject-tab1">

								<div class="group-box anim">
									<div class="tabsInfo" id="myTabContent-timeoff">
										<h3>Rejected Attendance</h3>

									</div>
									<div role="tabpanel" aria-labelledby="apply-tab">
										<div class="row">
											<div class="col-lg-12 col-md-12 col-sm-12">
												<div class="card">
													<div class="card-body">
														<table id="tblLeavesForReject" class="table table-striped body-text" style="width:100%">
															<thead>
																<tr>
																	<th class="first" style="visibility:hidden"> </th>
																	<th>Employee Number</th>
																	<th>Employee Name</th>
																	<th>From Date</th>
																	<th>To Date</th>
																	<th>Type</th>
																	<th>Days</th>
																	<th>Status</th>
																	<th>Reason</th>
																</tr>
															</thead>

														</table>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>


						</div>

					</div>
				</div>




			</div>
		</div>
	</div>
</section>
<div class="modal" tabindex="-1" role="dialog" id="ApproveRejectModel">
	<div class="modal-dialog modal-xl" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Attendance Request Details</h5>
				<button type="button" class="close" data-dismiss="modal" onclick="CloseApproveRejectModel();" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<section>
					<div class="container-fluid">
						<div class="row">
							<div class="col-md-12 py-4">
								<div class="tab-content" id="myTabContentSection">
									<div class="tab-pane fade active show" id="timeoff" role="tabpanel" aria-labelledby="timeoff-tab">
										<div class="row">
											<div class="col-lg-12">

												<div class="tab-pane fade active show">
													<div class="group-box anim">
														<div class="tabsInfo">
															<h3>Employee Info</h3>
															<div class="row">
																<div class="col-lg-4 col-md-4 mb-2">
																	<h6>Name</h6>
																	<p id="FullName"></p>
																</div>

																<div class="col-lg-4 col-md-4 mb-2">
																	<h6>Joinind Date</h6>
																	<p id="EmployeeJoiningdate"></p>
																</div>

															</div>

														</div>
													</div>
												</div>
											</div>
										</div>

									</div>
								</div>

							</div>
						</div>
					</div>
				</section>
				<div class="group-box anim">
					<div class="tabsInfo" id="">
						<h3>Attendance Info</h3>
						<div class="tab-content" id="nav-tabContent">
							<div class="tab-pane fade active show" id="apply-leave-tab" role="tabpanel" aria-labelledby="apply-leave-tab1">
								<div class="row">
									<p class="showalert" style="color: red;font-size: 16px;" id="showalert"></p>
									<p class="showDocumentalert" style="color: red;font-size: 16px;" id="responseMessage"></p>
									<form class="body-text" method="post" enctype="multipart/form-data">
										<input type="hidden" id="employeeID" name="employeeID">
										<input type="hidden" id="attendanceId" name="attendanceId">
										<input type="hidden" id="status" name="status">
										<div class="DateFormatDiv" style="display: flex;">
											<div class="col-lg-4 px-4">
												<h6>Start Date</h6>
												<p id="StartDate"> </p>

											</div>
											<div class="col-lg-4 px-4">
												<h6>End Date</h6>
												<p id="EndDate"> </p>

											</div>
											<div class="col-lg-4 px-4">
												<h6>Work Date</h6>
												<p id="WorkDate"> </p>

											</div>
										</div>
										<p>Admin Comment</p>
										<p><textarea class="form-control" id="ApproveRejectComment"></textarea></p>
										<p id="approverejectrequire" style="color: red;"></p>
										<div class="modal-footer">
											<button type="button" onclick="ApproveRejectAttendance(false)" class="btn btn-primary">Reject</button>
											<button type="button" id="approveButton" onclick="ApproveRejectAttendance(true)" class="btn btn-info">Approve</button>
										</div>
									</form>
								</div>

							</div>

						</div>

					</div>
				</div>
			</div>

		</div>
	</div>
</div>


<input type="hidden" id="AttWorkDate" />
<input type="hidden" id="AttStartDate" />
<input type="hidden" id="AttEndDate" />
<script>
		$(document).ready(function () {
		ApprovalAttendanceAutoReload();
		$("input[name='attendanceStatus']").change(function () {
			ApprovalAttendanceAutoReload();
		});
		$("input[name='approvedAttendanceStatus']").change(function () {
			ApprovedAttendanceAutoReload();
		});
		ApprovedAttendanceAutoReload();
	});
		function ApprovedAttendanceAutoReload() {
		let tableId = '#tblLeavesForApproved';
		let status = $("input[name='approvedAttendanceStatus']:checked").val();

		let url = '@(_configuration["AppSettings:RootUrl"])Employee/AttendenceList/GetApprovedAttendance/';
		let params = new URLSearchParams();
		params.append('attendanceStatus', status);

		let finalUrl = url + '?' + params.toString();

		RefreshTable1(tableId, finalUrl);

		if (!$.fn.DataTable.isDataTable(tableId)) {
			InittblLeavesForApproved();
		}
	}
	function ApprovalAttendanceAutoReload() {
		let tableId = '#tblAttendanceForApproval';
		let url = '@(_configuration["AppSettings:RootUrl"])Employee/AttendenceList/GetApprovedAttendance/?attendanceStatus=1';
		let attendanceStatus = $("input[name='attendanceStatus']:checked").val();
		let params = new URLSearchParams();
		params.append('attendanceStatus', attendanceStatus);

		let finalUrl = url + '?' + params.toString();

		RefreshTable(tableId, finalUrl);

		if (!$.fn.DataTable.isDataTable(tableId)) {
			InitOverviewDataTable();
		}
	}

	function InitOverviewDataTable() {
		$('#tblAttendanceForApproval').DataTable({
			ordering: true,
			paging: true,
			searching: true,
			info: true,
			responsive: true,
			columns: [
				{ data: "employeeName", autoWidth: true },
				{
					data: "firstLogDate",
					autoWidth: true,
					render: function (data) {
						return formatDate(data);
					}
				},
				{
					data: "lastLogDate",
					autoWidth: true,
					render: function (data) {
						return formatDate(data);
					}
				},
				{
					data: "workDate",
					autoWidth: true,
					render: function (data) {
						return formatDate(data);
					}
				},
				{ data: "hoursWorked", autoWidth: true },
				{ data: "attendanceStatus", autoWidth: true },
				{
					render: function (data, type, row) {
						return `<a onclick="OpenApproveRejectModel(${row.userId}, ${row.id}, '${row.firstLogDate}', '${row.lastLogDate}',  '${row.attendanceStatus}','${row.workDate}')" href="#" title="Approve">
									<img src="/assets/img/view.webp" width="23" height="23" alt="Approve" />
								</a>`;
					}
				}
			]
		});
	}

	function formatDate(dateString) {
		const date = new Date(dateString);
		const monthNames = [
			"January", "February", "March", "April", "May", "June",
			"July", "August", "September", "October", "November", "December"
		];
		const day = date.getDate();
		const month = monthNames[date.getMonth()];
		const year = date.getFullYear();
		let hours = date.getHours();
		let minutes = date.getMinutes();
		const ampm = hours >= 12 ? 'PM' : 'AM';
		hours = hours % 12 || 12;
		minutes = minutes < 10 ? '0' + minutes : minutes;
		const strTime = hours + ':' + minutes + ' ' + ampm;

		return `${day} ${month} ${year} ${strTime}`;
	}

	function RefreshTable(tableId, url) {
		$.post(url, function (json) {
			if (json.data && json.data.attendances) {
				const table = $(tableId).DataTable();
				table.clear();
				table.rows.add(json.data.attendances).draw();
			}
		});
	}

	function ApproveRejectAttendance(isApproved) {
		const actionText = isApproved ? "approve" : "reject";
		if (confirm(`Are you sure you want to ${actionText} this attendance request?`)) {
			const employeeID = $("#employeeID").val();
			const ApproveRejectComment = $("#ApproveRejectComment").val();
			if (ApproveRejectComment === "") {
				$("#approverejectrequire").text('Comment required');
				return;
			}
			const attendanceId = $("#attendanceId").val();
			const status = $("#status").val();
			const startDate = $("#AttStartDate").val();
			const endDate = $("#AttEndDate").val();
			const workDate = $("#AttWorkDate").val();
			const data = {
				attendanceId, employeeID, status, ApproveRejectComment,
				startDate, endDate, workDate
			};
			$.post('/Employee/AttendenceList/ApproveRejectAttendance/', data, function (json) {
				if (json.data && json.data.message) {
					if (json.data.status == 1) {
						$("#approverejectrequire").text(json.data.message);
					} else {
						$.toast({
							heading: 'Success',
							text: "Attendance status updated successfully.",
							showHideTransition: 'slide',
							icon: 'success',
							position: 'top-right',
						});
						CloseApproveRejectModel();
						AutoReload();
						$("#ApproveRejectComment").val("");
					}
				} else {
					$.toast({
						heading: 'Success',
						text: "Attendance status updated successfully.",
						showHideTransition: 'slide',
						icon: 'success',
						position: 'top-right',
					});
					$("#ApproveRejectComment").val("");
				}
			});
		}
	}

	function OpenApproveRejectModel(employeeID, Id, firstLogDate, lastLogDate, comments, workDate) {
		$("#employeeID").val(employeeID);
		$("#attendanceId").val(Id);
		$("#status").val(comments);
		$("#AttWorkDate").val(workDate);
		$("#AttStartDate").val(firstLogDate);
		$("#AttEndDate").val(lastLogDate);
		$("#WorkDate").text(formatDate(workDate));

		$.ajax({
			url: '/employee/AttendenceList/GetEmployeeAttendanceShiftDetails',
			type: 'GET',
			data: { employeeID, Id },
			success: function (response) {
				$("#FullName").text(response.fullName);
				$("#EmployeeJoiningdate").text(response.employeeJoiningdate);
				$("#StartDate").text(formatDate(firstLogDate));
				$("#EndDate").text(formatDate(lastLogDate));

				const logFirstTime = new Date(firstLogDate);
				const logLastTime = new Date(lastLogDate);
				const shiftStartTime = new Date(logFirstTime.toDateString() + ' ' + response.shiftStartDate);
				const shiftEndTime = new Date(logLastTime.toDateString() + ' ' + response.shiftEndDate);

				if (shiftStartTime.getTime() !== logFirstTime.getTime() ||
					shiftEndTime.getTime() !== logLastTime.getTime()) {
					$('#responseMessage').text('The provided times do not match the shift times.').css('color', 'red');
					$('#approveButton').prop('disabled', true);
				} else {
					$('#responseMessage').text('The times match.').css('color', 'green');
					$('#approveButton').prop('disabled', false);
				}
			},
			error: function (xhr) {
				$('#responseMessage').text('Error: ' + xhr.responseText);
			}
		});

		$('#ApproveRejectModel').modal('show');
	}

	function CloseApproveRejectModel() {
		$('#ApproveRejectModel').modal('hide');
	}

	   function LeavesForApproved() {
		new bootstrap.Tab(document.querySelector('#leave-approved-tab1')).show();

		let status = $("input[name='approvedAttendanceStatus']:checked").val(); // Get selected view
		let url = `@(_configuration["AppSettings:RootUrl"])/Employee/myinfo/GetLeaveForApproved?attendanceStatus=${status}`;

		RefreshTable1('#tblLeavesForApproved', url);

		if (!$.fn.DataTable.isDataTable('#tblLeavesForApproved')) {
			InittblLeavesForApproved();
		}
	}
	function LeavesForReject() {
		new bootstrap.Tab(document.querySelector('#leave-Reject-tab1')).show();

		RefreshTable2('#tblLeavesForReject', `@(_configuration["AppSettings:RootUrl"])/Employee/myinfo/GetLeaveForReject`);

		if (!$.fn.DataTable.isDataTable('#tblLeavesForReject')) {
			InittblLeavesForReject();
		}
	}

		function RefreshTable1(tableId, url) {
		$.post(url, function (json) {
			if (json.data && json.data.leaves) {
				const table = $(tableId).DataTable();
				table.clear();
				table.rows.add(json.data.leaves).draw();
			}
		});
	}
		function InittblLeavesForApproved() {
		$('#tblLeavesForApproved').DataTable({
			ordering: true,
			paging: true,
			searching: true,
			info: true,
			responsive: true,
			columns: [
				{ data: null, visible: false }, // Hidden column
				{ data: "employeeNumber", autoWidth: true },
				{ data: "employeeName", autoWidth: true },
				{
					data: "fromDate",
					render: function (data) {
						return formatDate(data);
					}
				},
				{
					data: "toDate",
					render: function (data) {
						return formatDate(data);
					}
				},
				{ data: "type", autoWidth: true },
				{ data: "days", autoWidth: true },
				{ data: "status", autoWidth: true },
				{ data: "reason", autoWidth: true }
			]
		});
	}
		function RefreshTable2(tableId, url) {
		$.post(url, function (json) {
			if (json.data && json.data.leaves) {
				const table = $(tableId).DataTable();
				table.clear();
				table.rows.add(json.data.leaves).draw();
			}
		});
	}
		function InittblLeavesForReject() {
		$('#tblLeavesForReject').DataTable({
			ordering: true,
			paging: true,
			searching: true,
			info: true,
			responsive: true,
			columns: [
				{ data: null, visible: false }, // Hidden column
				{ data: "employeeNumber", autoWidth: true },
				{ data: "employeeName", autoWidth: true },
				{
					data: "fromDate",
					render: function (data) {
						return formatDate(data);
					}
				},
				{
					data: "toDate",
					render: function (data) {
						return formatDate(data);
					}
				},
				{ data: "type", autoWidth: true },
				{ data: "days", autoWidth: true },
				{ data: "status", autoWidth: true },
				{ data: "reason", autoWidth: true }
			]
		});
	}

</script>


