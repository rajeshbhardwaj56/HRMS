@using HRMS.Models;
@using HRMS.Models.Common;
@using System.Globalization;
@using HRMS.Models.MyInfo;
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Configuration
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IConfiguration _configuration
@model MyInfoResults
@{
	SelectListItem selectCountry = @Model.employeeModel.Countries.Where(x => x.Value == Model.employeeModel.CorrespondenceCountryID.ToString()).FirstOrDefault();

    SelectListItem selectPermanentCountry = @Model.employeeModel.Countries.Where(x => x.Value == Model.employeeModel.PermanentCountryID.ToString()).FirstOrDefault();
    SelectListItem employmentHistoryCountry;
    var CountryData = @Model.employeeModel.Countries;
    Layout = String.Format("~/Areas/{0}/Views/Shared/_Layout.cshtml", @HttpContextAccessor.HttpContext.Session.GetString(HRMS.Models.Common.Constants.AreaName));
    var RoleName = Convert.ToInt64(this.Context.Session.GetString(Constants.RoleID));
    ViewData["Title"] = "Employee";
    var ProfilePhoto = "";
    if (!string.IsNullOrEmpty(Model.employeeModel.ProfilePhoto))
    {
        ProfilePhoto = this.HttpContextAccessor.HttpContext.Session.GetString(Constants.ProfilePhoto) ;
    }
    else
    {
        ProfilePhoto = HRMS.Models.Common.Constants.NoImagePath;
    }
   
    

}
	 
@functions {
	public string DisplayValue(string value)
	{
		return string.IsNullOrWhiteSpace(value) ? "N/A" : value;
	}
}
<style>
	.fade:not(.show) {
		opacity: 0;
		display: none !important;
	}
</style>


<section class="upper-section d-flex">

	<div class="container-fluid">
		<div class="profile-header d-flex ">
			<div class="profile-header-img">
				<img src="@ProfilePhoto" onerror="this.onerror=null; this.src='@(HRMS.Models.Common.Constants.NoImagePath)'" class="rounded-circle fixed z-5" />
			</div>
			<div class="profile-header-small-info">
				<h2>@(Model.employeeModel.FirstName) @(Model.employeeModel.MiddleName) @(Model.employeeModel.Surname)</h2>
				<p class="joiningDate">
					<b>Joining Date:</b> &nbsp;
					@if (Model.employmentDetail.JoiningDate != null)
					{
						@Convert.ToDateTime(Model.employmentDetail.JoiningDate).ToString("ddd, dd MMM yyyy")
						;
						DateTime zeroTime = new DateTime(1, 1, 1);
						DateTime TodayDate = DateTime.Now;
						DateTime JoiningDate = Convert.ToDateTime(Model.employmentDetail.JoiningDate);
						TimeSpan span = TodayDate - JoiningDate.Date;
						int years = (zeroTime + span).Year - 1;
						var Month = (TodayDate - JoiningDate.AddYears(years));
						var Days = (TodayDate - JoiningDate.AddYears(years)).Days;
						<span>@(years)y - @(Days)d</span>

					}

					else
					{
						<span class="Joiningnotavailable">Joining date not available. Please contact your administrator.</span>
					}
				</p>


				<div class="myinfo-menu">
					<ul class="nav nav-tabs section-tabs" id="myTab1" role="tablist">
						<li class="nav-item" role="presentation">
							<a class="nav-link section-link active" id="home-tab1" data-bs-toggle="tab" data-bs-target="#@(MyInfoTabs.TabPersonalInfo)" role="tab" aria-controls="@(MyInfoTabs.TabPersonalInfo)" aria-selected="true" tabindex="-1">Personal Info</a>
						</li>
						<li class="nav-item" role="presentation">
							<a class="nav-link section-link" id="profile-tab1" data-bs-toggle="tab" data-bs-target="#@(MyInfoTabs.TabProfessionalInfo)" role="tab" aria-controls="@(MyInfoTabs.TabProfessionalInfo)" aria-selected="false">Official Detail</a>
						</li>
						<li class="nav-item" role="presentation">
							<a class="nav-link section-link" id="profile-tab2" data-bs-toggle="tab" data-bs-target="#@(MyInfoTabs.TabBankInfo)" role="tab" aria-controls="@(MyInfoTabs.TabBankInfo)" aria-selected="false">Bank Detail</a>
						</li>
						

					</ul>
				</div>
			</div>
		</div>
	</div>
</section>
<section class="lower-section">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12 py-4">
				<div class="tab-content" id="myTabContentSection">
					<div class="tab-pane fade active show" id="timeoff" role="tabpanel" aria-labelledby="timeoff-tab">
						<div class="row">
							<div class="col-lg-12">

								<div class="tab-pane fade active show" id="@(MyInfoTabs.TabPersonalInfo)" role="tabpanel" aria-labelledby="@(MyInfoTabs.TabPersonalInfo)-tab">

									<div class="group-box anim">
										<div class="tabsInfo">
											<form class="body-text" method="post" enctype="multipart/form-data">
												<h3>Personal Info</h3>
												<div class="row">
													<div class="col-lg-4 col-md-4 mb-2">
														<h6>Name</h6>
														@Model.employeeModel.FirstName @Model.employeeModel.MiddleName @Model.employeeModel.Surname
													</div>
													<div class="col-lg-4 col-md-4 mb-2">
														<h6>Employee Number</h6>
														@($"PTK {Model.employmentDetail.EmployeNumber}")

													</div>
													@{
														string genderText = "";
														switch (Model.employeeModel.Gender)
														{
															case 1:
																genderText = "Male";
																break;
															case 2:
																genderText = "Female";
																break;
															case 3:
																genderText = "Other";
																break;
														}
													}

													@if (!string.IsNullOrEmpty(genderText))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Gender</h6>
															@genderText
														</div>
													}
													@if (Model.employeeModel.DateOfBirth.HasValue)
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Date of Birth</h6>
															@Model.employeeModel.DateOfBirth.Value.ToString("dd/MM/yyyy")
														</div>
													}
													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.PlaceOfBirth))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Place of Birth</h6>
															@Model.employeeModel.PlaceOfBirth
														</div>
													}
													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.Landline))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Landline</h6>
															@Model.employeeModel.Landline
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.Mobile))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Mobile</h6>
															@Model.employeeModel.Mobile
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.PersonalEmailAddress))
													{
														<div class="col-lg-6 col-md-6 mb-2">
															<h6>Personal Email Address</h6>
															@Model.employeeModel.PersonalEmailAddress
														</div>
													}
												</div>
												@if (!string.IsNullOrWhiteSpace(Model.employeeModel.CorrespondenceAddress))
												{
													<hr />
												}
												<div class="row">
													@if(!string.IsNullOrWhiteSpace(Model.employeeModel.CorrespondenceAddress))
													{
													<div class="col-lg-12 col-md-12 mb-2">
															<h6>Correspondence Address </h6>
														@Model.employeeModel.CorrespondenceAddress
													</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.CorrespondenceCity))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>City</h6>
															@Model.employeeModel.CorrespondenceCity
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.CorrespondencePinCode))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Pin</h6>
															@Model.employeeModel.CorrespondencePinCode
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.CorrespondenceState))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>State</h6>
															@Model.employeeModel.CorrespondenceState
														</div>
													}

													@if (selectCountry != null && !string.IsNullOrWhiteSpace(selectCountry.Value?.ToString()))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Country</h6>
															@selectCountry.Value.ToString()
														</div>
													}													
												</div>
												@if (!string.IsNullOrWhiteSpace(Model.employeeModel.PermanentAddress))
												{
													<hr />
												}

												<div class="row">
													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.PermanentAddress))
													{
														<div class="col-lg-12 col-md-12 mb-2">
															<h6>Permanent Address</h6>
															@Model.employeeModel.PermanentAddress
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.PermanentCity))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>City</h6>
															@Model.employeeModel.PermanentCity
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.PermanentPinCode))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Pin</h6>
															@Model.employeeModel.PermanentPinCode
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.PermanentState))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>State</h6>
															@Model.employeeModel.PermanentState
														</div>
													}
													@if (selectPermanentCountry != null && !string.IsNullOrWhiteSpace(selectPermanentCountry.Value?.ToString()))
													{
														<div class="col-lg-6 col-md-6 mb-2">
															<h6>Country</h6>
															@selectPermanentCountry.Value.ToString()
														</div>
													}
												</div>
												<hr />
												<div class="row">
													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.ContactPersonName))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Emergency Contact Person Name</h6>
															@Model.employeeModel.ContactPersonName
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.ContactPersonMobile))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Emergency Contact No</h6>
															@Model.employeeModel.ContactPersonMobile
														</div>
													}

													@if (!string.IsNullOrWhiteSpace(Model.employeeModel.ContactPersonTelephone))
													{
														<div class="col-lg-4 col-md-4 mb-2">
															<h6>Emergency Telephone No</h6>
															@Model.employeeModel.ContactPersonTelephone
														</div>
													}
												</div>

											</form>
										</div>
									</div>
								</div>

								<div class="tab-pane fade" id="@(MyInfoTabs.TabProfessionalInfo)" role="tabpanel" aria-labelledby="@(MyInfoTabs.TabProfessionalInfo)-tab">
									<div class="group-box anim">

										<div class="tabsInfo" id="myTabContent-timeoff">
											<h3>Official Details</h3>
											<div class="row">
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Employee Number</h6>
													@($"PTK {Model.employmentDetail.EmployeNumber}")
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Official Email</h6>
													@(string.IsNullOrWhiteSpace(Model.employmentDetail.OfficialEmailID) ? "N/A" : Model.employmentDetail.OfficialEmailID)
												</div>

												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Date of Joining</h6>
													@(Model.employmentDetail.JoiningDate != null ? Convert.ToDateTime(Model.employmentDetail.JoiningDate).ToString("dd/MM/yyyy"):"N/A")
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Date of Joining Training</h6>
													@(Model.employeeSeparationDetail.DateOfJoiningTraining != null ? Convert.ToDateTime(Model.employeeSeparationDetail.DateOfJoiningTraining).ToString("dd/MM/yyyy") : "N/A")
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Date of Joining Floor</h6>
													@(Model.employeeSeparationDetail.DateOfJoiningFloor != null ? Convert.ToDateTime(Model.employeeSeparationDetail.DateOfJoiningFloor).ToString("dd/MM/yyyy") : "N/A")
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Employment Type</h6>
													@Model.employmentDetail.EmployeeType
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Designation</h6>
													@Model.employmentDetail.DesignationName
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Department</h6>
													@Model.employmentDetail.DepartmentName
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Sub Department</h6>
													@Model.employmentDetail.SubDepartmentName
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Office Location</h6>
													@Model.employmentDetail.OfficeLocation
												</div>
												

												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Manager Name</h6>
													@Model.employmentDetail.ManagerName
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Manager Email</h6>
													@Model.employmentDetail.ManagerEmail
												</div>
											</div>

										</div>
									</div>
								</div>


								<div class="tab-pane fade" id="@(MyInfoTabs.TabBankInfo)" role="tabpanel" aria-labelledby="@(MyInfoTabs.TabBankInfo)-tab">
									<div class="group-box anim">

										<div class="tabsInfo" id="myTabContent-timeoff">
											<h3>Bank Details</h3>
											<div class="row">
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Bank Name</h6>
													@DisplayValue(Model.employeeBankDetail?.BankName)
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Bank Account Number</h6>
													@DisplayValue(Model.employeeBankDetail?.BankAccountNumber)
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>IFSC Code</h6>
													@DisplayValue(Model.employeeBankDetail?.IFSCCode)
												</div>	
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>UAN </h6>
													@DisplayValue(Model.employeeBankDetail?.UANNumber)
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>PAN Number</h6>
													@Model.employeeModel.PANNo
												</div>
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>Aadhaar Number</h6>
													@Model.employeeModel.AadharCardNo
												</div>	
												<div class="col-lg-4 col-md-4 mb-2">
													<h6>ESI Number</h6>
													@DisplayValue(Model.employmentDetail.ESINumber)
												</div>
											</div>
										</div>
									</div>
								</div>

							

								


							

							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<div class="modal" tabindex="-1" role="dialog" id="ApproveRejectModel">
	<div class="modal-dialog modal-xl" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Leave Request Details</h5>
				<button type="button" class="close" data-dismiss="modal" onclick="CloseApproveRejectModel();" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">

				<section>
					<div class="container-fluid">
						<div class="row">
							<div class="col-md-12 py-4">
								<div class="tab-content" id="myTabContentSection">
									<div class="tab-pane fade active show" id="timeoff" role="tabpanel" aria-labelledby="timeoff-tab">
										<div class="row">
											<div class="col-lg-12">

												<div class="tab-pane fade active show" id="@(MyInfoTabs.TabPersonalInfo)" role="tabpanel" aria-labelledby="@(MyInfoTabs.TabPersonalInfo)-tab">
													<div class="group-box anim">
														<div class="tabsInfo">
															<form class="body-text" method="post" enctype="multipart/form-data">
																<h3>Employee Info</h3>
																<div class="row">


																	<div class="col-lg-4 col-md-4 mb-2">
																		<h6>Name</h6>
																		<p id="EmplyoeeName"></p>
																	</div>
																	<div class="col-lg-4 col-md-4 mb-2">
																		<h6>ID</h6>
																		<p id="EmplyoeeNmmber"></p>
																	</div>
																	<div class="col-lg-4 col-md-4 mb-2">
																		<h6>Joinind Date</h6>
																		<p id="EmplyoeeJoiningdate"></p>
																	</div>
																	<div class="col-lg-4 col-md-4 mb-2">
																		<h6>Designation</h6>
																		<p id="EmplyoeeDesignation"></p>
																	</div>
																	<div class="col-lg-4 col-md-4 mb-2">
																		<h6>Department</h6>
																		<p id="EmplyoeeDepartment"></p>
																	</div>
																	<div class="col-lg-4 col-md-4 mb-2">
																		<h6>Email</h6>
																		<p id="Employeeemail"></p>
																	</div>

																</div>
															</form>
														</div>
													</div>
												</div>
											</div>
										</div>

									</div>
								</div>

							</div>
						</div>
					</div>
				</section>
				<div class="group-box anim">
					<div class="tabsInfo" id="">
						<h3>Leave Info</h3>

						<div class="tab-content" id="nav-tabContent">
							<div class="tab-pane fade active show" id="apply-leave-tab" role="tabpanel" aria-labelledby="apply-leave-tab1">
								<div class="row">
									<p class="showalert" style="color: red;font-size: 16px;" id="showalert"></p>
									<p class="showDocumentalert" style="color: red;font-size: 16px;" id="showDocumentalert"></p>

									<div class="col-lg-8">

										<div class="">
											<div class="">
												<form class="body-text" method="post" enctype="multipart/form-data">
													@Html.HiddenFor(x => x.leaveResults.leaveSummaryModel.CompanyID)
													@Html.HiddenFor(x => x.leaveResults.leaveSummaryModel.LeaveSummaryID)
													@Html.HiddenFor(x => x.leaveResults.leaveSummaryModel.EmployeeID)
													@Html.HiddenFor(x => x.leaveResults.leaveSummaryModel.UserID)
													<div class="row py-2">
														<div class="col-lg-6 col-md-12">
															<label for="leavetype" class="">Leave Type:</label>
															@Html.DropDownListFor(x => x.leaveResults.leaveSummaryModel.LeaveTypeID, Model.leaveResults.leaveTypes, HRMS.Models.Common.Constants.SelectLeaveType, new { @class = "form-control", @required = "required", @id = "adminleaveTypeDropdown", @disabled = "disabled" })

															<p id="adminleaveTypeDropdown1" class="form-control"></p>
														</div>
														<div class="col-lg-6 col-md-12" id="adminleaveDurationContainer">
															<label for="leavetype" class="">Leave Duration:</label>
															@Html.DropDownListFor(x => x.leaveResults.leaveSummaryModel.LeaveDurationTypeID, Model.leaveResults.leaveDurationTypes, HRMS.Models.Common.Constants.SelectLeaveDurationType, new { @class = "form-control", @id = "adminleaveDurationDropdown", @disabled = "disabled" })
														</div>
														<div class="col-lg-6 col-md-12" id="adminChildDOBDateContainer">
															<!-- New ID for toggling -->
															<label for="datepicker2" class="">Child DOB:</label>
															<i class="bi bi-info-circle" data-bs-toggle="tooltip" title="Paternity leave is available for childbirth, miscarriage, or adoption and must be used within 3 months of ChildDOB." style="cursor: pointer; margin-left: 5px;"></i>
															<div class="position-relative">
																<div class="input-group date" id="datepickerdiv3">
																	@Html.TextBoxFor(a => a.leaveResults.leaveSummaryModel.ChildDOB, "{0:yyyy-MM-dd}", new { @class = "form-control body-text", @type = "date", @min = DateTime.Now.AddMonths(-3).ToString("yyyy-MM-dd"), @disabled = "disabled" })
																</div>
															</div>
														</div>
													</div>
													<div class="row py-2 fullDayContainer" id="adminfullDayContainer">
														<div class="col-lg-6 col-md-12" id="adminfromdatetime">
															<label for="datepicker1" class="">From:</label>
															<div class="position-relative">
																<div class="input-group date" id="datepickerdiv1">
																	@Html.TextBoxFor(a => a.leaveResults.leaveSummaryModel.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control body-text", @type = "date", @min = DateTime.Now.ToString("yyyy-MM-dd"), id = "adminfromdates", @disabled = "disabled" })
																</div>
															</div>
														</div>
														<div class="col-lg-6 col-md-12" id="admintodatetime">
															<label for="datepicker2" class="">To:</label>
															<div class="position-relative">
																<div class="input-group date" id="datepickerdiv2">
																	@Html.TextBoxFor(a => a.leaveResults.leaveSummaryModel.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control body-text", @type = "date", @min = DateTime.Now.ToString("yyyy-MM-dd"), id = "admintodates", @disabled = "disabled" })
																</div>
															</div>
														</div>
													</div>

													<div class="row py-2 halfDayContainer" id="adminhalfDayContainer">
														<div class="col-lg-6 col-md-12">
															<label for="datepicker1" class="">Date:</label>
															<div class="position-relative">
																<div class="input-group date" id="datepickerdiv1">
																	@Html.TextBoxFor(a => a.leaveResults.leaveSummaryModel.HalfDayDate, "{0:yyyy-MM-dd}", new { @class = "form-control body-text", @type = "date", @min = DateTime.Now.ToString("yyyy-MM-dd"), @disabled = "disabled" })
																</div>
															</div>
														</div>

													</div>
													<div class="row py-2 MaternityAdoptionMiscarrageContainer " id="adminMaternityAdoptionMiscarrageContainer">
														<div class="col-lg-6 col-md-12" id="adminexpectedDeliveryDateContainer">
															<!-- New ID for toggling -->
															<label for="datepicker2" class="">Expected Delivery Date:</label>
															<i class="bi bi-info-circle" data-bs-toggle="tooltip" title="You are entitled to 26 weeks of maternity leave, with up to 8 weeks allowed before the delivery date." style="cursor: pointer; margin-left: 5px;"></i>

															<div class="position-relative">
																<div class="input-group date" id="datepickerdiv3">
																	@Html.TextBoxFor(a => a.leaveResults.leaveSummaryModel.ExpectedDeliveryDate, "{0:yyyy-MM-dd}", new { @class = "form-control body-text", @type = "date", @min = DateTime.Now.ToString("yyyy-MM-dd"), id = "adminExpectedDeliveryDate", @disabled = "disabled" })
																</div>
															</div>
														</div>

													</div>
													<div class="col-lg-6 col-md-12">
														<label id="LabelUploadCertificate" style="display:none">Upload Certificate:</label>
														<p id="downloaddocument" style="display:none"></p>
													</div>
													<div class="row py-3 mb-1">
														<div class="col-lg-12">
															<label for="Reason" class="">Reason:</label>
															<div class="input-group">
																@Html.TextAreaFor(a => a.leaveResults.leaveSummaryModel.Reason, new { @class = "form-control", @required = "required", id = "adminReason", @disabled = "disabled" })
															</div>
														</div>
													</div>
													@if (@RoleName != @Convert.ToInt64(Roles.HR))
													{
														<h3>Approval Comment</h3>
														<p><textarea class="form-control" id="ApproveRejectComment"></textarea></p>
														<p id="approverejectrequire" style="color: red;"></p>

														<div class="modal-footer">
															<button type="button" onclick="ApproveRejectLeave(false)" class="btn btn-primary">Reject</button>
															<button type="button" onclick="ApproveRejectLeave(true)" class="btn btn-info">Approve</button>

														</div>
													}
												</form>
											</div>
										</div>
									</div>
									<div class="col-lg-4 px-4">
										<div class="card mb-3" style="height:60px; display:none" id="AnnualLeaveBalance">
											<div class="card-body">
												<ul class="list-group" style="width:100%;">
													<li class="d-flex justify-content-between align-items-center ">
														<b>Annual Leave Balance</b>
														<span class="badge rounded-pill" style="background-color: #05397b">@ViewBag.UserTotalLeave/@ViewBag.UserTotalAnnualLeave</span>
													</li>
												</ul>
											</div>
										</div>


										<div class="card p-3">
											<div class="accordion accordion-flush" id="accordionFlushExample">
												<div class="accordion-item">
													<h2 class="accordion-header" id="flush-headingOne">
														<button class="accordion-button collapsed   z-0 mb-0" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
															Holiday List
														</button>
													</h2>
													<div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
														<div class="mt-3">
															<ul class="list-group ">
																@foreach (var item in Model.HolidayModel)
																{
																	<li class="list-group-item holiday-list d-flex justify-content-between align-items-center">
																		<span class="small">
																			@if (item.FromDate.Date == item.ToDate.Date)
																			{
																				@item.FromDate.ToString("dd-MMM-yyyy")
																			}
																			else
																			{
																				@($"{item.FromDate:dd-MMM-yyyy} to {item.ToDate:dd-MMM-yyyy}")
																			}
																		</span>
																		<span class="badge holiday-list-text bg-primary rounded-pill">@item.HolidayName</span>
																	</li>
																}
															</ul>
														</div>
													</div>
												</div>
											</div>
										</div>

									</div>
								</div>

							</div>

						</div>

					</div>
				</div>


			</div>

		</div>
	</div>
</div>
<script type="text/javascript">

	



	  



 

	

	$(document).ready(function () {
		$('[data-bs-toggle="tooltip"]').tooltip();
	});
	document.addEventListener('DOMContentLoaded', function () {
		// Save selected main tab to localStorage
		var mainTabs = document.querySelectorAll('.nav-link.section-link');
		mainTabs.forEach(function (tab) {
			tab.addEventListener('click', function () {
				localStorage.setItem('selectedMainTab', tab.getAttribute('data-bs-target'));
			});
		});

		// Check if a main tab was previously selected and open it
		var activeMainTab = localStorage.getItem('selectedMainTab');
		if (activeMainTab) {
			var targetMainTab = document.querySelector(`[data-bs-target="${activeMainTab}"]`);
			if (targetMainTab) {
				var bootstrapMainTab = new bootstrap.Tab(targetMainTab);
				bootstrapMainTab.show();
			}
		}

		// Save selected sub-tab (inside Leave Info) to localStorage
		var subTabs = document.querySelectorAll('.nav-link');
		subTabs.forEach(function (subTab) {
			subTab.addEventListener('click', function () {
				localStorage.setItem('selectedSubTab', subTab.getAttribute('data-bs-target'));
			});
		});

		// Check if a sub-tab was previously selected and open it
		var activeSubTab = localStorage.getItem('selectedSubTab');
		if (activeSubTab) {
			var targetSubTab = document.querySelector(`[data-bs-target="${activeSubTab}"]`);
			if (targetSubTab) {
				var bootstrapSubTab = new bootstrap.Tab(targetSubTab);
				bootstrapSubTab.show();
			}
		}

	
		
	});
	
</script>











